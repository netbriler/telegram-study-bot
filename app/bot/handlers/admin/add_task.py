from html import escape

from telebot.types import Message

from app.models import User
from app.services.subjects import recognize_subject
from app.services.tasks import add_task
from ...base import base
from ...helpers import send_message_private
from ...keyboards.default import get_subjects_keyboard_markup, get_cancel_keyboard_markup, get_menu_keyboard_markup
from ...loader import bot


@bot.message_handler(regexp='^‚ûï –î–æ–±–∞–≤–∏—Ç—å$')
@bot.message_handler(commands=['add'])
@base(is_admin=True)
def add_task_handler(message: Message):
    text = '–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç –∏–∑ –º–µ–Ω—é üëá'

    response = send_message_private(message, text, reply_markup=get_subjects_keyboard_markup())

    bot.register_next_step_handler(response, get_subject_handler)


@base(is_admin=True)
def get_subject_handler(message: Message):
    if message.content_type != 'text':
        response = bot.reply_to(message, f'–≠—Ç–æ {message.content_type}, –∞ –º–Ω–µ –Ω—É–∂–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞!')
        return bot.register_next_step_handler(response, get_subject_handler)

    subject = recognize_subject(message.text)

    text = f'–ù–∞–ø–∏—à–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–∞: {subject.name}'

    response = send_message_private(message, text, reply_markup=get_cancel_keyboard_markup())
    bot.register_next_step_handler(response, add_task_handler, subject=subject.to_json())


@base(is_admin=True)
def add_task_handler(message: Message, subject: dict, current_user: User):
    if message.content_type != 'text':
        response = bot.reply_to(message, f'–≠—Ç–æ {message.content_type}, –∞ –º–Ω–µ –Ω—É–∂–Ω–æ –∑–∞–¥–∞–Ω–∏–µ –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–∞!')
        return bot.register_next_step_handler(response, add_task_handler, subject=subject, current_user=current_user)

    task = add_task(subject['codename'], escape(message.text))
    if not task:
        return send_message_private(message,
                                    f'<b>–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ!</b>\n–ü–æ—Ö–æ–∂–µ –ø—Ä–µ–¥–º–µ—Ç–∞ "<i>{subject["name"]}</i>" –Ω–µ—Ç –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏',
                                    reply_markup=get_menu_keyboard_markup(current_user.is_admin()))

    text = ('–î–æ–±–∞–≤–ª–µ–Ω–æ:\n'
            f'{subject["name"]} - {task.text}')

    send_message_private(message, text, reply_markup=get_menu_keyboard_markup(current_user.is_admin()))


@bot.message_handler(regexp='^!(.+)-(.|\s)+$')
@base(is_admin=True)
def add_task_via_decorator_handler(message: Message, current_user: User):
    query = message.text.replace('!', '').strip()
    subject_name = query.split('-')[0]
    task_text = query.replace(subject_name, '', 1).replace('-', '', 1).strip()

    subject = recognize_subject(subject_name)

    task = add_task(subject.codename, escape(task_text))
    if not task:
        return send_message_private(message,
                                    f'<b>–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ!</b>\n–ü–æ—Ö–æ–∂–µ –ø—Ä–µ–¥–º–µ—Ç–∞ "<i>{subject.name}</i>" –Ω–µ—Ç –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏',
                                    reply_markup=get_menu_keyboard_markup(current_user.is_admin()))

    text = ('–î–æ–±–∞–≤–ª–µ–Ω–æ:\n'
            f'{subject.name} - {task.text}')

    bot.send_message(message.chat.id, text, parse_mode='HTML')
